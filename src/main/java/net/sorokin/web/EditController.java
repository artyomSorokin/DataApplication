package net.sorokin.web;


import net.sorokin.dao.cardao.CarDao;
import net.sorokin.entity.Car;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import javax.servlet.http.HttpSession;
import java.math.BigDecimal;
import java.sql.Date;
import java.util.List;

@Controller
@RequestMapping("/edit")
public class EditController {

    private CarDao carDao;

    @Autowired
    public EditController(CarDao carDao) {
        this.carDao = carDao;
    }

    /*
    * param action - event of client
    * param [] carIds - id of cars, generated by database
    * param manufacturer - manufacturer from entity Car
    * param model - model from entity Car
    * param date - date from entity Car
    * param price - price from entity Car
    */
    @RequestMapping(method = RequestMethod.GET)
    public String actionHandler(@RequestParam("action") String action,@RequestParam("id") String id,
                                @RequestParam("manufacturer") String manufacturer,
                                @RequestParam("model") String model, @RequestParam("date") String date,
                                @RequestParam("price") String price,  HttpSession session){

        String message;
        String resultPage = "error";

        if(action.equals("save")){
            try {
                Car car = carDao.getCarById(Integer.parseInt(id));
                car.setManufacturer(manufacturer);
                car.setModel(model);
                car.setDate(Date.valueOf(date));
                car.setPrice(new BigDecimal(price));
                carDao.updateCar(car);
                message = "User was updated";
                List<Car> carList = carDao.getAllCar();
                session.setAttribute("carList", carList);
                session.setAttribute("message", message);
                resultPage = "dataGrid";
            } catch (Exception e) {
                message = "Problem with action save in EditController" + e;
                session.setAttribute("message", message);
            }
        }
        else if(action.equals("add")){
            try {
                Car car = new Car();
                car.setManufacturer(manufacturer);
                car.setModel(model);
                car.setDate(Date.valueOf(date));
                car.setPrice(new BigDecimal(price));
                carDao.addCarToDb(car);
                List<Car> carList = carDao.getAllCar();
                message = "User was added";
                session.setAttribute("message", message);
                session.setAttribute("carList", carList);
                resultPage = "dataGrid";
            } catch (Exception e) {
                message = "Problem with action add in EditController" + e;
                session.setAttribute("message", message);
            }
        }
        else if(action.equals("cancel")){
            try {
                message = "Canceled";
                session.setAttribute("message", message);
                List<Car> carList = carDao.getAllCar();
                session.setAttribute("carList", carList);
                resultPage = "dataGrid";
            }
            catch (Exception e){
                message = "Problem with action cancel in EditController" + e;
                session.setAttribute("message", message);
            }
        }
        return resultPage;
    }

}
