package net.sorokin.web;

import net.sorokin.dao.cardao.CarDao;
import net.sorokin.entity.Car;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import javax.servlet.http.HttpSession;
import java.util.ArrayList;
import java.util.List;

@Controller
@RequestMapping("/event")
public class EventController {

    private CarDao carDao;

    @Autowired
    public EventController(CarDao carDao) {
        this.carDao = carDao;
    }

    /*
    * param action - event of client
    * param [] carIds - id of cars, generated by database
    */
    @RequestMapping(method = RequestMethod.GET)
    public String actionHandler(@RequestParam("action") String action,
                                @RequestParam(required = false, value = "carId") String [] carIds,
                                HttpSession session) {

        String message;
        String resultPage = "error";

        if(action.equals("refresh")){
            try {
                List<Car> carList = carDao.getAllCar();
                message = "Data were refreshed";
                session.setAttribute("carList", carList);
                session.setAttribute("message", message);
            } catch (Exception e) {
                message = "Problem with database in action refresh" + e;
                session.setAttribute("message", message);
            }
            return "dataGrid";
        }
        else if(action.equals("delete")){
            try {
                List<Car> carList = new ArrayList<>();
                if(carIds != null) {
                    for (String carId : carIds) {
                        int id = Integer.parseInt(carId);
                        Car car = carDao.getCarById(id);
                        carList.add(car);
                    }
                    carDao.deleteCar(carList);
                    message = "Row was deleted";
                }
                else {
                    message = "Please select row to delete";
                }
                List<Car> cars = carDao.getAllCar();
                session.setAttribute("carList", cars);
                session.setAttribute("message", message);
            } catch (Exception e) {
                message = "Problem with action delete" + e;
                session.setAttribute("message", message);
            }
            return "dataGrid";
        }

        else if(action.equals("edit")){
            List<Car> carList = null;
            Car car = null;
            if(carIds == null){
                try {
                    message = "Not any row is selected";
                    carList = carDao.getAllCar();
                    session.setAttribute("carList", carList);
                    session.setAttribute("message", message);
                } catch (Exception e) {
                    message = "Problem with database in action edit" + e;
                    session.setAttribute("message", message);
                }
                resultPage = "edit";
            }
            else if(carIds != null){
                if(carIds.length > 1){
                    try {
                        carList = carDao.getAllCar();
                        session.setAttribute("carList", carList);
                    } catch (Exception e) {
                        message = "Problem with database in action edit" + e;
                        session.setAttribute("message", message);
                    }
                    resultPage = "dataGrid";
                }
                else if(carIds.length == 1){
                    String carId = carIds[0];
                    try {
                        car = carDao.getCarById(Integer.parseInt(carId));
                        session.setAttribute("car", car);
                    } catch (Exception e) {
                        message = "Problem in action edit if cards.length == 1" + e;
                        session.setAttribute("message", message);
                    }
                    resultPage = "edit";
                }
            }
        }
        return resultPage;
    }

}
